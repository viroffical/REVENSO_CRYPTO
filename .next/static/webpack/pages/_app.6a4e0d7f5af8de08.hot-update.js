"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "(pages-dir-browser)/./lib/supabaseClient.js":
/*!*******************************!*\
  !*** ./lib/supabaseClient.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(pages-dir-browser)/./node_modules/@supabase/ssr/dist/module/index.js\");\n\n\n// Get environment variables\nconst supabaseUrl = \"https://rjucgbzerztofpuotjgr.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJqdWNnYnplcnp0b2ZwdW90amdyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ2MzI2MTAsImV4cCI6MjA2MDIwODYxMH0.jf08hvHlAP5RAXqziUa8rytGR60xqRWnUAuhqfo-pek\";\n// Check that we have valid URLs and keys\nconst isValidUrl = (url)=>{\n    try {\n        // If URL is empty, this will throw and we'll catch it\n        new URL(url);\n        return true;\n    } catch (e) {\n        console.error(\"Invalid Supabase URL:\", e.message);\n        return false;\n    }\n};\nlet supabase;\ntry {\n    if (!supabaseUrl || !isValidUrl(supabaseUrl) || !supabaseAnonKey) {\n        console.warn(\"Missing or invalid Supabase credentials. Some features may not work correctly.\");\n        // Create a mock client that will gracefully fail\n        supabase = {\n            auth: {\n                signInWithOAuth: ()=>Promise.resolve({\n                        error: new Error(\"Supabase not configured\")\n                    }),\n                signOut: ()=>Promise.resolve({\n                        error: new Error(\"Supabase not configured\")\n                    }),\n                getSession: ()=>Promise.resolve({\n                        data: {\n                            session: null\n                        }\n                    }),\n                onAuthStateChange: ()=>({\n                        data: {\n                            subscription: {\n                                unsubscribe: ()=>{}\n                            }\n                        }\n                    })\n            },\n            from: ()=>({\n                    select: ()=>Promise.resolve({\n                            data: [],\n                            error: new Error(\"Supabase not configured\")\n                        })\n                })\n        };\n    } else {\n        // Create the browser client with better SSR support\n        supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createBrowserClient)(supabaseUrl, supabaseAnonKey);\n    }\n} catch (error) {\n    console.error(\"Error creating Supabase client:\", error);\n    // Create a safe fallback\n    supabase = {\n        auth: {\n            signInWithOAuth: ()=>Promise.resolve({\n                    error: new Error(\"Supabase client error\")\n                }),\n            signOut: ()=>Promise.resolve({\n                    error: new Error(\"Supabase client error\")\n                }),\n            getSession: ()=>Promise.resolve({\n                    data: {\n                        session: null\n                    }\n                }),\n            onAuthStateChange: ()=>({\n                    data: {\n                        subscription: {\n                            unsubscribe: ()=>{}\n                        }\n                    }\n                })\n        },\n        from: ()=>({\n                select: ()=>Promise.resolve({\n                        data: [],\n                        error: new Error(\"Supabase client error\")\n                    })\n            })\n    };\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2xpYi9zdXBhYmFzZUNsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUNEO0FBRXBELDRCQUE0QjtBQUM1QixNQUFNRSxjQUFjO0FBQ3BCLE1BQU1DLGtCQUNKO0FBRUYseUNBQXlDO0FBQ3pDLE1BQU1DLGFBQWEsQ0FBQ0M7SUFDbEIsSUFBSTtRQUNGLHNEQUFzRDtRQUN0RCxJQUFJQyxJQUFJRDtRQUNSLE9BQU87SUFDVCxFQUFFLE9BQU9FLEdBQUc7UUFDVkMsUUFBUUMsS0FBSyxDQUFDLHlCQUF5QkYsRUFBRUcsT0FBTztRQUNoRCxPQUFPO0lBQ1Q7QUFDRjtBQUVBLElBQUlDO0FBRUosSUFBSTtJQUNGLElBQUksQ0FBQ1QsZUFBZSxDQUFDRSxXQUFXRixnQkFBZ0IsQ0FBQ0MsaUJBQWlCO1FBQ2hFSyxRQUFRSSxJQUFJLENBQ1Y7UUFFRixpREFBaUQ7UUFDakRELFdBQVc7WUFDVEUsTUFBTTtnQkFDSkMsaUJBQWlCLElBQ2ZDLFFBQVFDLE9BQU8sQ0FBQzt3QkFBRVAsT0FBTyxJQUFJUSxNQUFNO29CQUEyQjtnQkFDaEVDLFNBQVMsSUFDUEgsUUFBUUMsT0FBTyxDQUFDO3dCQUFFUCxPQUFPLElBQUlRLE1BQU07b0JBQTJCO2dCQUNoRUUsWUFBWSxJQUFNSixRQUFRQyxPQUFPLENBQUM7d0JBQUVJLE1BQU07NEJBQUVDLFNBQVM7d0JBQUs7b0JBQUU7Z0JBQzVEQyxtQkFBbUIsSUFBTzt3QkFDeEJGLE1BQU07NEJBQUVHLGNBQWM7Z0NBQUVDLGFBQWEsS0FBTzs0QkFBRTt3QkFBRTtvQkFDbEQ7WUFDRjtZQUNBQyxNQUFNLElBQU87b0JBQ1hDLFFBQVEsSUFDTlgsUUFBUUMsT0FBTyxDQUFDOzRCQUNkSSxNQUFNLEVBQUU7NEJBQ1JYLE9BQU8sSUFBSVEsTUFBTTt3QkFDbkI7Z0JBQ0o7UUFDRjtJQUNGLE9BQU87UUFDTCxvREFBb0Q7UUFDcEROLFdBQVdWLGtFQUFtQkEsQ0FBQ0MsYUFBYUM7SUFDOUM7QUFDRixFQUFFLE9BQU9NLE9BQU87SUFDZEQsUUFBUUMsS0FBSyxDQUFDLG1DQUFtQ0E7SUFDakQseUJBQXlCO0lBQ3pCRSxXQUFXO1FBQ1RFLE1BQU07WUFDSkMsaUJBQWlCLElBQ2ZDLFFBQVFDLE9BQU8sQ0FBQztvQkFBRVAsT0FBTyxJQUFJUSxNQUFNO2dCQUF5QjtZQUM5REMsU0FBUyxJQUNQSCxRQUFRQyxPQUFPLENBQUM7b0JBQUVQLE9BQU8sSUFBSVEsTUFBTTtnQkFBeUI7WUFDOURFLFlBQVksSUFBTUosUUFBUUMsT0FBTyxDQUFDO29CQUFFSSxNQUFNO3dCQUFFQyxTQUFTO29CQUFLO2dCQUFFO1lBQzVEQyxtQkFBbUIsSUFBTztvQkFDeEJGLE1BQU07d0JBQUVHLGNBQWM7NEJBQUVDLGFBQWEsS0FBTzt3QkFBRTtvQkFBRTtnQkFDbEQ7UUFDRjtRQUNBQyxNQUFNLElBQU87Z0JBQ1hDLFFBQVEsSUFDTlgsUUFBUUMsT0FBTyxDQUFDO3dCQUNkSSxNQUFNLEVBQUU7d0JBQ1JYLE9BQU8sSUFBSVEsTUFBTTtvQkFDbkI7WUFDSjtJQUNGO0FBQ0Y7QUFFb0IiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvbGliL3N1cGFiYXNlQ2xpZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gXCJAc3VwYWJhc2Uvc3VwYWJhc2UtanNcIjtcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJDbGllbnQgfSBmcm9tIFwiQHN1cGFiYXNlL3NzclwiO1xuXG4vLyBHZXQgZW52aXJvbm1lbnQgdmFyaWFibGVzXG5jb25zdCBzdXBhYmFzZVVybCA9IFwiaHR0cHM6Ly9yanVjZ2J6ZXJ6dG9mcHVvdGpnci5zdXBhYmFzZS5jb1wiO1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID1cbiAgXCJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcGMzTWlPaUp6ZFhCaFltRnpaU0lzSW5KbFppSTZJbkpxZFdObllucGxjbnAwYjJad2RXOTBhbWR5SWl3aWNtOXNaU0k2SW1GdWIyNGlMQ0pwWVhRaU9qRTNORFEyTXpJMk1UQXNJbVY0Y0NJNk1qQTJNREl3T0RZeE1IMC5qZjA4aHZIbEFQNVJBWHF6aVVhOHJ5dEdSNjB4cVJXblVBdWhxZm8tcGVrXCI7XG5cbi8vIENoZWNrIHRoYXQgd2UgaGF2ZSB2YWxpZCBVUkxzIGFuZCBrZXlzXG5jb25zdCBpc1ZhbGlkVXJsID0gKHVybCkgPT4ge1xuICB0cnkge1xuICAgIC8vIElmIFVSTCBpcyBlbXB0eSwgdGhpcyB3aWxsIHRocm93IGFuZCB3ZSdsbCBjYXRjaCBpdFxuICAgIG5ldyBVUkwodXJsKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJJbnZhbGlkIFN1cGFiYXNlIFVSTDpcIiwgZS5tZXNzYWdlKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbmxldCBzdXBhYmFzZTtcblxudHJ5IHtcbiAgaWYgKCFzdXBhYmFzZVVybCB8fCAhaXNWYWxpZFVybChzdXBhYmFzZVVybCkgfHwgIXN1cGFiYXNlQW5vbktleSkge1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgIFwiTWlzc2luZyBvciBpbnZhbGlkIFN1cGFiYXNlIGNyZWRlbnRpYWxzLiBTb21lIGZlYXR1cmVzIG1heSBub3Qgd29yayBjb3JyZWN0bHkuXCIsXG4gICAgKTtcbiAgICAvLyBDcmVhdGUgYSBtb2NrIGNsaWVudCB0aGF0IHdpbGwgZ3JhY2VmdWxseSBmYWlsXG4gICAgc3VwYWJhc2UgPSB7XG4gICAgICBhdXRoOiB7XG4gICAgICAgIHNpZ25JbldpdGhPQXV0aDogKCkgPT5cbiAgICAgICAgICBQcm9taXNlLnJlc29sdmUoeyBlcnJvcjogbmV3IEVycm9yKFwiU3VwYWJhc2Ugbm90IGNvbmZpZ3VyZWRcIikgfSksXG4gICAgICAgIHNpZ25PdXQ6ICgpID0+XG4gICAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHsgZXJyb3I6IG5ldyBFcnJvcihcIlN1cGFiYXNlIG5vdCBjb25maWd1cmVkXCIpIH0pLFxuICAgICAgICBnZXRTZXNzaW9uOiAoKSA9PiBQcm9taXNlLnJlc29sdmUoeyBkYXRhOiB7IHNlc3Npb246IG51bGwgfSB9KSxcbiAgICAgICAgb25BdXRoU3RhdGVDaGFuZ2U6ICgpID0+ICh7XG4gICAgICAgICAgZGF0YTogeyBzdWJzY3JpcHRpb246IHsgdW5zdWJzY3JpYmU6ICgpID0+IHt9IH0gfSxcbiAgICAgICAgfSksXG4gICAgICB9LFxuICAgICAgZnJvbTogKCkgPT4gKHtcbiAgICAgICAgc2VsZWN0OiAoKSA9PlxuICAgICAgICAgIFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAgICAgICBkYXRhOiBbXSxcbiAgICAgICAgICAgIGVycm9yOiBuZXcgRXJyb3IoXCJTdXBhYmFzZSBub3QgY29uZmlndXJlZFwiKSxcbiAgICAgICAgICB9KSxcbiAgICAgIH0pLFxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgLy8gQ3JlYXRlIHRoZSBicm93c2VyIGNsaWVudCB3aXRoIGJldHRlciBTU1Igc3VwcG9ydFxuICAgIHN1cGFiYXNlID0gY3JlYXRlQnJvd3NlckNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5KTtcbiAgfVxufSBjYXRjaCAoZXJyb3IpIHtcbiAgY29uc29sZS5lcnJvcihcIkVycm9yIGNyZWF0aW5nIFN1cGFiYXNlIGNsaWVudDpcIiwgZXJyb3IpO1xuICAvLyBDcmVhdGUgYSBzYWZlIGZhbGxiYWNrXG4gIHN1cGFiYXNlID0ge1xuICAgIGF1dGg6IHtcbiAgICAgIHNpZ25JbldpdGhPQXV0aDogKCkgPT5cbiAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHsgZXJyb3I6IG5ldyBFcnJvcihcIlN1cGFiYXNlIGNsaWVudCBlcnJvclwiKSB9KSxcbiAgICAgIHNpZ25PdXQ6ICgpID0+XG4gICAgICAgIFByb21pc2UucmVzb2x2ZSh7IGVycm9yOiBuZXcgRXJyb3IoXCJTdXBhYmFzZSBjbGllbnQgZXJyb3JcIikgfSksXG4gICAgICBnZXRTZXNzaW9uOiAoKSA9PiBQcm9taXNlLnJlc29sdmUoeyBkYXRhOiB7IHNlc3Npb246IG51bGwgfSB9KSxcbiAgICAgIG9uQXV0aFN0YXRlQ2hhbmdlOiAoKSA9PiAoe1xuICAgICAgICBkYXRhOiB7IHN1YnNjcmlwdGlvbjogeyB1bnN1YnNjcmliZTogKCkgPT4ge30gfSB9LFxuICAgICAgfSksXG4gICAgfSxcbiAgICBmcm9tOiAoKSA9PiAoe1xuICAgICAgc2VsZWN0OiAoKSA9PlxuICAgICAgICBQcm9taXNlLnJlc29sdmUoe1xuICAgICAgICAgIGRhdGE6IFtdLFxuICAgICAgICAgIGVycm9yOiBuZXcgRXJyb3IoXCJTdXBhYmFzZSBjbGllbnQgZXJyb3JcIiksXG4gICAgICAgIH0pLFxuICAgIH0pLFxuICB9O1xufVxuXG5leHBvcnQgeyBzdXBhYmFzZSB9O1xuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsImNyZWF0ZUJyb3dzZXJDbGllbnQiLCJzdXBhYmFzZVVybCIsInN1cGFiYXNlQW5vbktleSIsImlzVmFsaWRVcmwiLCJ1cmwiLCJVUkwiLCJlIiwiY29uc29sZSIsImVycm9yIiwibWVzc2FnZSIsInN1cGFiYXNlIiwid2FybiIsImF1dGgiLCJzaWduSW5XaXRoT0F1dGgiLCJQcm9taXNlIiwicmVzb2x2ZSIsIkVycm9yIiwic2lnbk91dCIsImdldFNlc3Npb24iLCJkYXRhIiwic2Vzc2lvbiIsIm9uQXV0aFN0YXRlQ2hhbmdlIiwic3Vic2NyaXB0aW9uIiwidW5zdWJzY3JpYmUiLCJmcm9tIiwic2VsZWN0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./lib/supabaseClient.js\n"));

/***/ })

});